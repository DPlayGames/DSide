DSide.Node=OBJECT({init:(t,e)=>{const a=["218.38.19.34:8923","175.207.29.151:8923"];let n,i=e.getNowUTC=(()=>{let t=new Date;return t.getTime()+6e4*t.getTimezoneOffset()}),o=[],r={},d=[],u={},c=(t,e)=>{EACH(r,a=>{a({methodName:t,data:e})})},s=(t,e,a,n)=>{void 0!==u[e]&&EACH(u[e],e=>{e!==n&&e({methodName:t,data:a})})};WEB_SOCKET_SERVER(WEB_SERVER(CONFIG.DSide.port),(t,e,n,r,f)=>{let D,g;e("getClientIp",(e,a)=>{a(t.ip)}),e("getNodeURLs",(t,e)=>{e(0===o.length?a:o)}),e("getVersion",(t,e)=>{e(CONFIG.DSide.version)}),e("getNodeTime",(t,e)=>{e(i())}),e("connectNode",(a,n)=>{void 0!==a&&S(t.ip+":"+a,e,r)}),e("getAccountId",(t,e)=>{e(CONFIG.DSide.accountId)}),e("getStoreHash",(t,e)=>{let a=DSide.Store.getAllStores()[t];void 0!==a&&e(a.getHash())}),e("getStoreDataSet",(t,e)=>{let a=DSide.Store.getAllStores()[t];void 0!==a&&e(a.getDataSet())}),e("getTargetStoreHash",(t,e)=>{let a=DSide.TargetStore.getAllStores()[t];void 0!==a&&e(a.getHash())}),e("getTargetStoreTargetHashSet",(t,e)=>{let a=DSide.TargetStore.getAllStores()[t];void 0!==a&&e(a.getTargetHashSet())}),e("getTargetStoreDataSet",(t,e)=>{let a=t.storeName,n=t.target,i=DSide.TargetStore.getAllStores()[a];void 0!==i&&e(i.getDataSet(n))}),e("getSecureStoreHash",(t,e)=>{let a=DSide.SecureStore.getAllStores()[t];void 0!==a&&e(a.getHash())}),e("getSecureStoreDataSet",(t,e)=>{let a=DSide.SecureStore.getAllStores()[t];void 0!==a&&e(a.getDataSet())}),e("getSecureTargetStoreHash",(t,e)=>{let a=DSide.SecureTargetStore.getAllStores()[t];void 0!==a&&e(a.getHash())}),e("getSecureTargetStoreTargetHashSet",(t,e)=>{let a=DSide.SecureTargetStore.getAllStores()[t];void 0!==a&&e(a.getTargetHashSet())}),e("getSecureTargetStoreDataSet",(t,e)=>{let a=t.storeName,n=t.target,i=DSide.SecureTargetStore.getAllStores()[a];void 0!==i&&e(i.getDataSet(n))}),d.push(r),e("joinTarget",(t,e)=>{t.length<=256&&(void 0===u[t]&&(u[t]=[]),CHECK_IS_IN({array:u[t],value:r})!==!0&&u[t].push(r))}),e("exitTarget",(t,e)=>{void 0!==u[t]&&(REMOVE({array:u[t],value:r}),0===u[t].length&&delete u[t])}),e("__DISCONNECTED",()=>{REMOVE({array:d,value:r}),EACH(u,(t,e)=>{REMOVE({array:t,value:r}),0===t.length&&delete u[e]})}),e("getDBalance",(t,e)=>{void 0!==t&&e(DSide.dStore.getBalance(t))}),e("saveAccountDetail",(t,e)=>{let a=DSide.AccountDetailStore.saveData(t);void 0!==a.savedData&&c("saveAccountDetail",t),e(a)}),e("getAccountDetail",(t,e)=>{void 0!==t&&e(DSide.AccountDetailStore.getAccountDetail(t))}),e("findAccounts",(t,e)=>{void 0!==t&&e(DSide.AccountDetailStore.findAccounts(t))}),e("createGuild",(t,e)=>{let a=DSide.GuildStore.saveData(t);void 0!==a.savedData&&c("createGuild",t),e(a)}),e("getGuildHash",(t,e)=>{void 0!==t&&e(DSide.GuildStore.getGuildHash(t))}),e("updateGuild",(t,e)=>{let a=DSide.GuildStore.updateGuild(t);void 0!==a.savedData&&c("updateGuild",t),e(a)}),e("getGuildList",(t,e)=>{e(DSide.GuildStore.getGuildListByMemberCount())}),e("findGuilds",(t,e)=>{void 0!==t&&e(DSide.GuildStore.findGuilds(t))}),e("getAccountGuild",(t,e)=>{void 0!==t&&e(DSide.GuildStore.getAccountGuild(t))}),e("requestGuildJoin",(t,e)=>{let a=DSide.GuildJoinRequestStore.saveData(t);void 0!==a.savedData&&c("requestGuildJoin",t),e(a)}),e("checkGuildJoinRequested",(t,e)=>{void 0!==t&&e(DSide.GuildJoinRequestStore.checkRequested(t))}),e("getGuildJoinRequesterIds",(t,e)=>{void 0!==t&&e(DSide.GuildJoinRequestStore.getRequesterIds(t))}),e("denyGuildJoinRequest",(t,e)=>{DSide.GuildJoinRequestStore.deny(t),c("denyGuildJoinRequest",t)}),e("requestFriend",(t,e)=>{let a=DSide.FriendRequestStore.saveData(t);void 0!==a.savedData&&c("requestFriend",t),e(a)}),e("checkFriendRequested",(t,e)=>{void 0!==t&&e(DSide.FriendRequestStore.checkRequested(t))}),e("getFriendRequesterIds",(t,e)=>{void 0!==t&&e(DSide.FriendRequestStore.getRequesterIds(t))}),e("denyFriendRequest",(t,e)=>{DSide.FriendRequestStore.deny(t),c("denyFriendRequest",t)}),e("acceptFriendRequest",(t,e)=>{let a=DSide.FriendStore.saveData(t);void 0!==a.savedData&&c("acceptFriendRequest",t),e(a)}),e("getFriendIds",(t,e)=>{void 0!==t&&e(DSide.FriendStore.getFriendIds(t))}),e("generateLoginToken",(t,e)=>{e(D=RANDOM_STR(24))}),e("login",(t,e)=>{let a=t.hash,n=t.accountId;DSide.Verify({accountId:n,data:D,hash:a})===!0?(g=n,e(!0)):e(!1)}),e("sendChatMessage",t=>{if(void 0!==g&&void 0!==t){let e=t.target,a=t.message;if(a=String(a).trim(),""!==a){let t=UUID(),n={senderId:g,target:e,message:a,createTime:new Date};DSide.ChatStore.saveData({id:t,data:n}),c("saveChatMessage",{id:t,data:n}),s("newChatMessage",e,n,r)}}}),e("getChatMessages",(t,e)=>{let a=[];EACH(DSide.ChatStore.getDataSet(t),t=>{a.push(t)}),a.sort((t,e)=>{return t.createTime<e.createTime?-1:t.createTime>e.createTime?1:0}),e(a)}),e("sendPendingTransaction",t=>{if(void 0!==t){let e=t.target,a=t.network,n=t.transactionHash,i=t.message,o=UUID(),d={target:e,network:a,transactionHash:n,message:i,createTime:new Date};DSide.PendingTransactionStore.saveData({id:o,data:d}),c("savePendingTransaction",{id:o,data:d}),s("newPendingTransaction",e,d,r)}}),e("getPendingTransactions",(t,e)=>{let a=[];EACH(DSide.PendingTransactionStore.getDataSet(t),t=>{a.push(t)}),e(a)})});let S=(t,e,a)=>{r[t]=a,DSide.NodeOperationTimeStore.saveData({id:t,data:{startOperationTime:new Date,createTime:new Date}}),e("saveAccountDetail",t=>{void 0!==t&&DSide.AccountDetailStore.saveData(t)}),e("createGuild",t=>{void 0!==t&&DSide.GuildStore.saveData(t)}),e("updateGuild",t=>{void 0!==t&&DSide.GuildStore.updateGuild(t)}),e("requestGuildJoin",t=>{void 0!==t&&DSide.GuildJoinRequestStore.saveData(t)}),e("denyGuildJoinRequest",t=>{void 0!==t&&DSide.GuildJoinRequestStore.deny(t)}),e("requestFriend",t=>{void 0!==t&&DSide.FriendRequestStore.saveData(t)}),e("denyFriendRequest",t=>{void 0!==t&&DSide.FriendRequestStore.deny(t)}),e("acceptFriendRequest",t=>{void 0!==t&&DSide.FriendStore.saveData(t)}),e("saveChatMessage",t=>{if(void 0!==t){let e=t.data;void 0!==e&&(DSide.ChatStore.saveData(t),s("newChatMessage",e.target,e))}}),e("savePendingTransaction",t=>{if(void 0!==t){let e=t.data;void 0!==e&&(DSide.PendingTransactionStore.saveData(t),s("newPendingTransaction",e.target,e))}}),e("__DISCONNECTED",()=>{delete r[t],DSide.NodeOperationTimeStore.getData(t,e=>{delete e.startOperationTime,e.operationTime=Date.now()-e.startOperationTime.getTime(),e.lastUpdateTime=new Date,DSide.NodeOperationTimeStore.updateData({id:t,data:e})})})},f=(t,e)=>{let a=DSide.Store.getAllStores()[t];void 0!==a&&e({methodName:"getStoreHash",data:t},n=>{a.getHash()!==n&&e({methodName:"getStoreDataSet",data:t},t=>{let e=a.getDataSet();EACH(t,(t,n)=>{void 0===e[n]&&a.syncData({id:n,data:t})}),EACH(e,(e,n)=>{void 0===t[n]&&a.dropData(n)})})})},D=(t,e)=>{let a=DSide.TargetStore.getAllStores()[t];void 0!==a&&e({methodName:"getTargetStoreHash",data:t},n=>{a.getHash()!==n&&e({methodName:"getTargetStoreTargetHashSet",data:t},n=>{let i=a.getTargetHashSet();EACH(n,(n,o)=>{i[o]!==n&&e({methodName:"getTargetStoreDataSet",data:{storeName:t,target:o}},t=>{let e=a.getDataSet(o);EACH(t,(t,n)=>{void 0===e[n]&&a.syncData({id:n,data:t})}),EACH(e,(e,n)=>{void 0===t[n]&&a.dropData({target:o,id:n})})})}),EACH(i,(t,e)=>{void 0===n[e]&&a.dropTarget(e)})})})},g=(t,e)=>{let a=DSide.SecureStore.getAllStores()[t];void 0!==a&&e({methodName:"getSecureStoreHash",data:t},n=>{a.getHash()!==n&&e({methodName:"getSecureStoreDataSet",data:t},t=>{let e=a.getDataSet();EACH(t,(t,n)=>{void 0===e[n]&&a.syncData({hash:n,data:t})}),EACH(e,(e,n)=>{void 0===t[n]&&a.dropData(n)})})})},E=(t,e)=>{let a=DSide.SecureTargetStore.getAllStores()[t];void 0!==a&&e({methodName:"getSecureTargetStoreHash",data:t},n=>{a.getHash()!==n&&e({methodName:"getSecureTargetStoreTargetHashSet",data:t},n=>{let i=a.getTargetHashSet();EACH(n,(n,o)=>{i[o]!==n&&e({methodName:"getSecureTargetStoreDataSet",data:{storeName:t,target:o}},t=>{let e=a.getDataSet(o);EACH(t,(t,n)=>{void 0===e[n]&&a.syncData({hash:n,data:t})}),EACH(e,(e,n)=>{void 0===t[n]&&a.dropData({target:o,hash:n})})})}),EACH(i,(t,e)=>{void 0===n[e]&&a.dropTarget(e)})})})};NEXT([t=>{let e=!1;EACH(a,a=>{let i=a.split(":"),o=i[0];CONNECT_TO_WEB_SOCKET_SERVER({host:o,port:INTEGER(i[1])},{error:()=>{},success:(a,i,r,d)=>{e!==!0?r("getClientIp",a=>{e!==!0&&o!==a&&"192.168."!==a.substring(0,8)&&"127.0.0.1"!==a&&"localhost"!==a?r("getNodeURLs",i=>{e!==!0&&(n=a+":"+CONFIG.DSide.port,t(i),e=!0),d()}):d()}):d()}})})},()=>{return t=>{o=t;let e;EACH(o,t=>{if(t!==n&&void 0===r[t]){let a=t.split(":");CONNECT_TO_WEB_SOCKET_SERVER({host:a[0],port:INTEGER(a[1])},{error:()=>{},success:(a,n,i,o)=>{i("getVersion",n=>{n===CONFIG.DSide.version?(i({methodName:"connectNode",data:CONFIG.DSide.port}),S(t,a,i),e!==!0&&(EACH(DSide.Store.getAllStores(),(t,e)=>{f(e,i)}),EACH(DSide.TargetStore.getAllStores(),(t,e)=>{D(e,i)}),EACH(DSide.SecureStore.getAllStores(),(t,e)=>{g(e,i)}),EACH(DSide.SecureTargetStore.getAllStores(),(t,e)=>{E(e,i)}),e=!0)):o()})}})}})}}]);let h=(t,e,a,n)=>{let i=t.getHash(),o={};o[i]=DSide.dStore.getBalance(CONFIG.DSide.accountId);let d={};d[i]=[],PARALLEL(r,[(t,n)=>{let i=!1;t("getAccountId",r=>{i!==!0&&t({methodName:e,data:a},e=>{i!==!0&&(void 0===o[e]&&(o[e]=0),o[e]+=DSide.dStore.getBalance(r),void 0===d[e]&&(d[e]=[]),d[e].push(t),n(),i=!0)})}),DELAY(5,()=>{i!==!0&&(n(),i=!0)})},()=>{let t,e=-1;EACH(o,(a,n)=>{e<a&&(a=e,t=n)}),EACH(d[t],t=>{if(CHECK_IS_IN({array:r,value:t})===!0)return n(a,t),!1})}])};INTERVAL(1,()=>{let t=CALENDAR(new Date(i()));0===t.getHour()&&0===t.getMinute()&&0===t.getSecond()&&(DSide.dStore.chargeLacks(),EACH(DSide.NodeOperationTimeStore.getDataSet(),(t,e)=>{let a=r[e];void 0!==a&&a("getAccountId",t=>{DSide.dStore.chargeNodeReward({accountId:t,operationTime:DSide.NodeOperationTimeStore.getOperationTime(e)})})}),DSide.NodeOperationTimeStore.clearOperationTimes(),DELAY(5,()=>{EACH(DSide.Store.getAllStores(),(t,e)=>{h(t,"getStoreHash",e,f)}),EACH(DSide.TargetStore.getAllStores(),(t,e)=>{h(t,"getTargetStoreHash",e,D)}),EACH(DSide.SecureStore.getAllStores(),(t,e)=>{h(t,"getSecureStoreHash",e,g)}),EACH(DSide.SecureTargetStore.getAllStores(),(t,e)=>{h(t,"getSecureTargetStoreHash",e,E)})}))})}}),DSide.SecureStore=CLASS(t=>{const e=require("ethereumjs-util");let a={};t.getAllStores=(()=>{return a});return{preset:t=>{let e=t.dataStructure;e.accountId={notEmpty:!0,size:42},e.createTime={notEmpty:!0,date:!0},e.lastUpdateTime={date:!0}},init:(t,n,i)=>{let o=i.storeName,r=i.dataStructure;a[o]=n;let d=VALID(r),u={};READ_FILE({path:"data/"+o+".json",isSync:!0},{notExists:()=>{},success:t=>{u=PARSE_STR(t.toString()),void 0===u&&(u={})}});let c=!1,s=(n.getHash=(()=>{return DSide.Store.generateHash(u)}),n.getDataSet=(()=>{return u}),n.checkValid=(t=>{let e=d.checkAndWash(t);return{isValid:e.checkHasError()!==!0,validErrors:e.getErrors()}})),S=(n.saveData=(t=>{let a=t.data,n=t.hash,i=s(a);if(i.isValid===!0){let t=a.accountId,i=a.createTime,o=a.lastUpdateTime;return t=e.toChecksumAddress(t),void 0!==i&&DSide.Node.getNowUTC()-i.getTime()<5e3&&void 0===o&&void 0===u[n]&&DSide.Verify({accountId:t,data:a,hash:n})===!0?(u[n]=a,c=!0,{savedData:a}):{isNotVerified:!0}}return{validErrors:i.validErrors}}),n.syncData=(t=>{let a=t.data,n=t.hash,i=s(a);if(i.isValid===!0){let t=a.accountId,i=a.createTime;t=e.toChecksumAddress(t),void 0!==i&&DSide.Verify({accountId:t,data:a,hash:n})===!0&&(u[n]=a,c=!0)}}),n.getData=(t=>{return u[t]})),f=(n.updateData=(t=>{let a=t.originHash,n=t.data,i=t.hash,o=s(n);if(o.isValid===!0){let t=n.accountId,o=n.createTime,r=n.lastUpdateTime;t=e.toChecksumAddress(t);let d=S(a);return void 0!==d?o.getTime()===d.createTime.getTime()&&void 0!==r&&DSide.Node.getNowUTC()-r.getTime()<5e3&&t===d.accountId&&DSide.Verify({accountId:t,data:n,hash:i})===!0?(f(a),u[i]=n,c=!0,{originData:d,savedData:n}):{isNotVerified:!0}:{isNotExists:!0}}return{validErrors:o.validErrors}}),n.removeData=(t=>{let e=t.hash,a=t.checkHash,n=S(e);return void 0!==n?DSide.Verify({accountId:n.accountId,data:e,hash:a})===!0?(f(e),{originData:n}):{isNotVerified:!0}:{isNotExists:!0}}),n.dropData=(t=>{let e=S(t);void 0!==e&&(delete u[t],c=!0)}));INTERVAL(10,()=>{DELAY(10*Math.random(),()=>{c===!0&&(WRITE_FILE({path:"data/"+o+".json",content:STRINGIFY(u)}),c=!1)})})}}}),DSide.SecureTargetStore=CLASS(t=>{const e=require("ethereumjs-util");let a={};t.getAllStores=(()=>{return a});return{preset:t=>{let e=t.dataStructure;e.target={notEmpty:!0,size:{max:256}},e.accountId={notEmpty:!0,size:42},e.createTime={notEmpty:!0,date:!0},e.lastUpdateTime={date:!0}},init:(t,n,i)=>{let o=i.storeName,r=i.dataStructure;a[o]=n;let d={};READ_FILE({path:"data/"+o+".json",isSync:!0},{notExists:()=>{},success:t=>{d=PARSE_STR(t.toString()),void 0===d&&(d={})}});let u=!1,c=VALID(r),s={};EACH(d,(t,e)=>{READ_FILE({path:"data/"+o+"/"+e+".json",isSync:!0},{notExists:()=>{},success:t=>{s[e]=PARSE_STR(t.toString())}})});let S={},f=n.getHash=(()=>{return DSide.Store.generateHash(s)}),D=(n.getTargetHash=(t=>{return DSide.Store.generateHash(D(t))}),n.getDataSet=(t=>{return void 0===s[t]?{}:s[t]})),g=(n.getTargetHashSet=(()=>{return d}),n.checkValid=(t=>{let e=c.checkAndWash(t);return{isValid:e.checkHasError()!==!0,validErrors:e.getErrors()}})),E=(n.saveData=(t=>{let a=t.data,n=t.hash,i=g(a);if(i.isValid===!0){let t=a.target,i=a.accountId,o=a.createTime,r=a.lastUpdateTime;return i=e.toChecksumAddress(i),void 0!==o&&DSide.Node.getNowUTC()-o.getTime()<5e3&&void 0===r&&DSide.Verify({accountId:i,data:a,hash:n})===!0?(void 0===s[t]&&(s[t]={}),void 0===s[t][n]?(s[t][n]=a,S[t]=!0,d[t]=f(t),u=!0,{savedData:a}):{isNotVerified:!0}):{isNotVerified:!0}}return{validErrors:i.validErrors}}),n.syncData=(t=>{let a=t.data,n=t.hash,i=g(a);if(i.isValid===!0){let t=a.target,i=a.accountId,o=a.createTime;i=e.toChecksumAddress(i),void 0!==o&&DSide.Verify({accountId:i,data:a,hash:n})===!0&&(void 0===s[t]&&(s[t]={}),s[t][n]=a,S[t]=!0,d[t]=f(t),u=!0)}}),n.getData=(t=>{let e=t.target,a=t.hash;if(void 0!==s[e])return s[e][a]})),h=(n.updateData=(t=>{let a=t.originHash,n=t.data,i=t.hash,o=g(n);if(o.isValid===!0){let t=n.target,o=n.accountId,r=n.createTime,c=n.lastUpdateTime;o=e.toChecksumAddress(o);let D=E({target:t,hash:a});return void 0!==D?r.getTime()===D.createTime.getTime()&&void 0!==c&&DSide.Node.getNowUTC()-c.getTime()<5e3&&t===D.target&&o===D.accountId&&DSide.Verify({accountId:o,data:n,hash:i})===!0?(h({target:t,hash:a}),void 0===s[t]&&(s[t]={}),s[t][i]=n,S[t]=!0,d[t]=f(t),u=!0,{originData:D,savedData:n}):{isNotVerified:!0}:{isNotExists:!0}}return{validErrors:o.validErrors}}),n.removeData=(t=>{let e=t.target,a=t.hash,n=t.checkHash,i=E({target:e,hash:a});return void 0!==i?DSide.Verify({accountId:i.accountId,data:a,hash:n})===!0||DSide.Verify({accountId:i.target,data:a,hash:n})===!0?(h(t),{originData:i}):{isNotVerified:!0}:{isNotExists:!0}}),n.dropData=(t=>{let e=E(t);if(void 0!==e){let e=t.target,a=t.hash;void 0===s[e]?m(e):(delete s[e][a],CHECK_IS_EMPTY_DATA(s[e])===!0?m(e):(d[e]=f(e),u=!0,S[e]=!0))}})),m=n.dropTarget=(t=>{delete s[t],delete d[t],u=!0,S[t]=!0});INTERVAL(10,()=>{EACH(S,(t,e)=>{DELAY(10*Math.random(),()=>{S[e]===!0&&(void 0===s[e]?REMOVE_FILE("data/"+o+"/"+e+".json",{notExists:()=>{}}):WRITE_FILE({path:"data/"+o+"/"+e+".json",content:STRINGIFY(s[e])}),delete S[e])})})}),INTERVAL(10,()=>{DELAY(10*Math.random(),()=>{u===!0&&(WRITE_FILE({path:"data/"+o+".json",content:STRINGIFY(d)}),u=!1)})})}}}),DSide.Store=CLASS(t=>{const e=require("ethereumjs-util");let a=t.generateHash=(t=>{let a={};return Object.keys(t).sort().forEach(e=>{a[e]=t[e]}),"0x"+e.keccak256(STRINGIFY(a)).toString("hex")}),n={};t.getAllStores=(()=>{return n});return{preset:t=>{let e=t.dataStructure;e.createTime={notEmpty:!0,date:!0},e.lastUpdateTime={date:!0}},init:(t,e,i)=>{let o=i.storeName,r=i.dataStructure;n[o]=e;let d=VALID(r),u={};READ_FILE({path:"data/"+o+".json",isSync:!0},{notExists:()=>{},success:t=>{u=PARSE_STR(t.toString()),void 0===u&&(u={})}});let c=!1,s=(e.getHash=(()=>{return a(u)}),e.getDataSet=(()=>{return u}),e.checkValid=(t=>{let e=d.checkAndWash(t);return{isValid:e.checkHasError()!==!0,validErrors:e.getErrors()}})),S=(e.saveData=(t=>{let e=t.id,a=t.data,n=s(a);if(n.isValid===!0){let t=a.createTime,n=a.lastUpdateTime;return void 0!==t&&DSide.Node.getNowUTC()-t.getTime()<5e3&&void 0===n&&void 0===u[e]?(u[e]=a,c=!0,{savedData:a}):{isNotVerified:!0}}return{validErrors:n.validErrors}}),e.syncData=(t=>{let e=t.id,a=t.data,n=s(a);if(n.isValid===!0){let t=a.createTime;void 0!==t&&(u[e]=a,c=!0)}}),e.getData=(t=>{return u[t]})),f=(e.updateData=(t=>{let e=t.id,a=t.data,n=s(a);if(n.isValid===!0){let t=a.createTime,n=a.lastUpdateTime,i=S(e);return void 0!==i?t.getTime()===i.createTime.getTime()&&void 0!==n&&DSide.Node.getNowUTC()-n.getTime()<5e3?(f(e),u[e]=a,c=!0,{originData:i,savedData:a}):{isNotVerified:!0}:{isNotExists:!0}}return{validErrors:n.validErrors}}),e.removeData=(t=>{let e=S(t);return void 0!==e?(f(t),{originData:e}):{isNotExists:!0}}),e.dropData=(t=>{let e=S(t);void 0!==e&&(delete u[t],c=!0)}));INTERVAL(10,()=>{DELAY(10*Math.random(),()=>{c===!0&&(WRITE_FILE({path:"data/"+o+".json",content:STRINGIFY(u)}),c=!1)})})}}}),DSide.TargetStore=CLASS(t=>{let e={};t.getAllStores=(()=>{return e});return{preset:t=>{let e=t.dataStructure;e.target={notEmpty:!0,size:{max:256}},e.createTime={notEmpty:!0,date:!0},e.lastUpdateTime={date:!0}},init:(t,a,n)=>{let i=n.storeName,o=n.dataStructure;e[i]=a;let r={};READ_FILE({path:"data/"+i+".json",isSync:!0},{notExists:()=>{},success:t=>{r=PARSE_STR(t.toString()),void 0===r&&(r={})}});let d=!1,u=VALID(o),c={};EACH(r,(t,e)=>{READ_FILE({path:"data/"+i+"/"+e+".json",isSync:!0},{notExists:()=>{},success:t=>{c[e]=PARSE_STR(t.toString())}})});let s={},S=a.getHash=(()=>{return DSide.Store.generateHash(c)}),f=(a.getTargetHash=(t=>{return DSide.Store.generateHash(f(t))}),a.getDataSet=(t=>{return void 0===c[t]?{}:c[t]})),D=(a.getTargetHashSet=(()=>{return r}),a.checkValid=(t=>{let e=u.checkAndWash(t);return{isValid:e.checkHasError()!==!0,validErrors:e.getErrors()}})),g=(a.saveData=(t=>{let e=t.id,a=t.data,n=D(a);if(n.isValid===!0){let t=a.target,n=a.createTime,i=a.lastUpdateTime;return void 0!==n&&DSide.Node.getNowUTC()-n.getTime()<5e3&&void 0===i?(void 0===c[t]&&(c[t]={}),void 0===c[t][e]?(c[t][e]=a,s[t]=!0,r[t]=S(t),d=!0,{savedData:a}):{isNotVerified:!0}):{isNotVerified:!0}}return{validErrors:n.validErrors}}),a.syncData=(t=>{let e=t.id,a=t.data,n=D(a);if(n.isValid===!0){let t=a.target,n=a.createTime;void 0!==n&&(void 0===c[t]&&(c[t]={}),c[t][e]=a,s[t]=!0,r[t]=S(t),d=!0)}}),a.getData=(t=>{let e=t.target,a=t.id;if(void 0!==c[e])return c[e][a]})),E=(a.updateData=(t=>{let e=t.id,a=t.data,n=D(a);if(n.isValid===!0){let t=a.target,n=a.createTime,i=a.lastUpdateTime,o=g({target:t,id:e});return void 0!==o?n.getTime()===o.createTime.getTime()&&void 0!==i&&DSide.Node.getNowUTC()-i.getTime()<5e3&&t===o.target?(E({target:t,id:e}),void 0===c[t]&&(c[t]={}),c[t][e]=a,s[t]=!0,r[t]=S(t),d=!0,{originData:o,savedData:a}):{isNotVerified:!0}:{isNotExists:!0}}return{validErrors:n.validErrors}}),a.removeData=(t=>{let e=g(t);return void 0!==e?(E(t),{originData:e}):{isNotExists:!0}}),a.dropData=(t=>{let e=g(t);if(void 0!==e){let e=t.target,a=t.id;void 0===c[e]?h(e):(delete c[e][a],CHECK_IS_EMPTY_DATA(c[e])===!0?h(e):(r[e]=S(e),d=!0,s[e]=!0))}})),h=a.dropTarget=(t=>{delete c[t],delete r[t],d=!0,s[t]=!0});INTERVAL(10,()=>{EACH(s,(t,e)=>{DELAY(10*Math.random(),()=>{s[e]===!0&&(void 0===c[e]?REMOVE_FILE("data/"+i+"/"+e+".json",{notExists:()=>{}}):WRITE_FILE({path:"data/"+i+"/"+e+".json",content:STRINGIFY(c[e])}),delete s[e])})})}),INTERVAL(10,()=>{DELAY(10*Math.random(),()=>{d===!0&&(WRITE_FILE({path:"data/"+i+".json",content:STRINGIFY(r)}),d=!1)})})}}}),DSide.Verify=METHOD(t=>{const e=require("ethereumjs-util");return{run:t=>{let a,n=t.accountId,i=t.data,o=t.hash;if(CHECK_IS_DATA(i)===!0){let t={};Object.keys(i).sort().forEach(e=>{t[e]=i[e]}),a=STRINGIFY(t)}else a=i;let r=e.fromRpcSig(o),d=Buffer.from(a),u=Buffer.from("Ethereum Signed Message:\n"),c=e.keccak256(Buffer.concat([u,Buffer.from(String(d.length)),d])),s=e.ecrecover(c,r.v,r.r,r.s);return n.toLowerCase()===e.bufferToHex(e.pubToAddress(s))}}}),DSide.AccountDetailStore=OBJECT({preset:()=>{return DSide.SecureStore},params:()=>{return{storeName:"AccountDetail",dataStructure:{name:{notEmpty:!0,size:{max:20}},introduce:{size:{max:256}}}}},init:(t,e)=>{let a={};EACH(e.getDataSet(),(t,e)=>{a[t.accountId]=e});let n=e.dropData;delete e.dropData;let i;OVERRIDE(e.saveData,t=>{i=e.saveData=(e=>{let i=e.data.accountId;if(DSide.dStore.getBalance(i)>=1){let o=a[i],r=t(e);return void 0!==r.savedData&&(void 0!==o&&n(o),a[i]=e.hash,DSide.dStore.use({accountId:i,amount:1})),r}return{isNotEnoughD:!0}})});let o;OVERRIDE(e.syncData,t=>{o=e.syncData=(e=>{let i=e.data.accountId,o=a[i];void 0!==o&&n(o),t(e),a[i]=e.hash})}),delete e.updateData,delete e.removeData;e.getAccountDetail=(t=>{let n=a[t];if(void 0!==n)return e.getData(n)}),e.findAccounts=(t=>{let a=[];return void 0!==t&&""!==t.trim()&&EACH(e.getDataSet(),e=>{new RegExp(t,"g").test(e.name)===!0&&a.push(e)}),a})}}),DSide.FriendStore=OBJECT({preset:()=>{return DSide.SecureStore},params:()=>{return{storeName:"Friend",dataStructure:{account2Id:{notEmpty:!0,size:42}}}},init:(t,e)=>{let a;OVERRIDE(e.saveData,t=>{a=e.saveData=(e=>{let a=e.data.accountId,n=e.data.account2Id;if(DSide.FriendRequestStore.checkRequested({accountId:n,target:a})===!0){let i=t(e);return void 0!==i.savedData&&DSide.FriendRequestStore.acceptedRequest({accountId:a,account2Id:n}),i}return{isNotVerified:!0}})});let n;OVERRIDE(e.removeData,t=>{n=e.removeData=(t=>{let a=t.hash,n=t.checkHash,i=getData(a);return void 0!==i?DSide.Verify({accountId:i.accountId,data:a,hash:n})===!0||DSide.Verify({accountId:i.account2Id,data:a,hash:n})===!0?(e.dropData(a),{originData:i}):{isNotVerified:!0}:{isNotExists:!0}})});e.getFriendIds=(t=>{let a=[];return EACH(e.getDataSet(),e=>{e.accountId===t?a.push(e.account2Id):e.account2Id===t&&a.push(e.accountId)}),a})}}),DSide.GuildStore=OBJECT({preset:()=>{return DSide.SecureStore},params:()=>{return{storeName:"Guild",dataStructure:{id:{notEmpty:!0,size:36},name:{notEmpty:!0,size:{max:20}},introduce:{size:{max:256}},memberIds:{notEmpty:!0,array:!0}}}},init:(t,e)=>{let a={},n={};EACH(e.getDataSet(),(t,e)=>{a[t.id]=e,EACH(t.memberIds,e=>{n[e]=t.id})});let i;OVERRIDE(e.saveData,t=>{i=e.saveData=(e=>{let i=e.data.id,o=e.data.accountId;if(DSide.dStore.getBalance(o)>=20){let r=a[i];if(void 0===r&&void 0===n[o]&&1===e.data.memberIds.length&&e.data.memberIds[0]===o){let r=t(e);return void 0!==r.savedData&&(a[i]=e.hash,n[o]=i,DSide.dStore.use({accountId:o,amount:20})),r}return{isNotVerified:!0}}return{isNotEnoughD:!0}})});let o;OVERRIDE(e.syncData,t=>{o=e.syncData=(e=>{let i=e.data.id,o=e.data.accountId;t(e),a[i]=e.hash,n[o]=i})});let r;OVERRIDE(e.updateData,t=>{r=e.updateData=(i=>{let o=i.originHash,r=i.data.id,d=i.data.accountId,u=i.data.memberIds;if(DSide.dStore.getBalance(d)>=1){let c=e.getData(o);if(void 0!==c&&r===c.id&&CHECK_IS_IN({array:u,value:d})===!0){let e=!1;if(CHECK_ARE_SAME([u,c.memberIds])!==!0&&(EACH(u,t=>{CHECK_IS_IN({array:c.memberIds,value:t})!==!0&&DSide.GuildJoinRequestStore.checkRequested({target:r,accountId:t})!==!0&&(e=!0)}),e!==!0&&(EACH(u,t=>{CHECK_IS_IN({array:c.memberIds,value:t})!==!0&&(n[t]=r,DSide.GuildJoinRequestStore.acceptedRequest({guildId:r,accountId:t}))}),EACH(c.memberIds,t=>{CHECK_IS_IN({array:u,value:t})!==!0&&delete n[t]}))),e===!0)return{isNotVerified:!0};{let e=t(i);return void 0!==e.savedData&&(a[r]=i.hash,DSide.dStore.use({accountId:d,amount:1})),e}}return{isNotVerified:!0}}return{isNotEnoughD:!0}})});let d;OVERRIDE(e.removeData,t=>{d=e.removeData=(e=>{let i=t(e);return void 0!==i.originData&&(delete a[i.originData.id],EACH(n,(t,e)=>{t===i.originData.id&&delete n[e]})),i})});let u;OVERRIDE(e.dropData,t=>{u=e.dropData=(i=>{let o=e.getData(i);t(i),void 0!==o&&(delete a[o.id],EACH(n,(t,e)=>{t===result.originData.id&&delete n[e]}))})});let c=e.getGuild=(t=>{let n=a[t];if(void 0!==n)return e.getData(n)});e.updateGuild=(t=>{let e=t.data,n=t.hash,i=e.id,o=a[i];if(void 0!==o)return r({originHash:o,data:e,hash:n})}),e.getGuildHash=(t=>{return a[t]}),e.getAccountGuild=(t=>{let e=n[t];if(void 0!==e)return c(e)}),e.getGuildListByMemberCount=(()=>{let t=e.getDataSet(),a=[];return EACH(t,t=>{a.push(t)}),a.sort((t,e)=>{return t.memberIds.length>e.memberIds.length?-1:t.memberIds.length<e.memberIds.length?1:0}),a}),e.findGuilds=(t=>{let a=[];return void 0!==t&&""!==t.trim()&&EACH(e.getDataSet(),e=>{new RegExp(t,"g").test(e.name)===!0&&a.push(e)}),a})}}),DSide.FriendRequestStore=OBJECT({preset:()=>{return DSide.SecureTargetStore},params:()=>{return{storeName:"FriendRequest",dataStructure:{}}},init:(t,e)=>{let a;OVERRIDE(e.saveData,t=>{a=e.saveData=(e=>{let a=e.data.target,i=e.data.accountId;if(DSide.dStore.getBalance(i)>=1){if(n({accountId:i,target:a})!==!0){let a=t(e);return void 0!==a.savedData&&DSide.dStore.use({accountId:i,amount:1}),a}return{isNotVerified:!0}}return{isNotEnoughD:!0}})}),delete e.updateData;let n=e.checkRequested=(t=>{let a=t.accountId,n=t.target,i=!1;return EACH(e.getDataSet(n),t=>{if(t.accountId===a)return i=!0,!1}),i});e.getRequesterIds=(t=>{let a=[];return EACH(e.getDataSet(t),t=>{a.push(t.accountId)}),a}),e.deny=(t=>{let a=t.target,n=t.accountId,i=t.hash;DSide.Verify({accountId:a,data:{target:a,accountId:n},hash:i})===!0&&EACH(e.getDataSet(a),(t,i)=>{if(t.accountId===n)return e.dropData({target:a,hash:i}),!1})}),e.acceptedRequest=(t=>{let a=t.accountId,n=t.account2Id;EACH(e.getDataSet(a),(t,i)=>{if(t.accountId===n)return e.dropData({target:a,hash:i}),!1})})}}),DSide.GuildJoinRequestStore=OBJECT({preset:()=>{return DSide.SecureTargetStore},params:()=>{return{storeName:"GuildJoinRequest",dataStructure:{}}},init:(t,e)=>{let a;OVERRIDE(e.saveData,t=>{a=e.saveData=(e=>{let a=e.data.target,i=e.data.accountId;if(DSide.dStore.getBalance(i)>=1){if(n({accountId:i,target:a})!==!0){let a=t(e);return void 0!==a.savedData&&DSide.dStore.use({accountId:i,amount:1}),a}return{isNotVerified:!0}}return{isNotEnoughD:!0}})}),delete e.updateData;let n=e.checkRequested=(t=>{let a=t.accountId,n=t.target,i=!1;return EACH(e.getDataSet(n),t=>{if(t.accountId===a)return i=!0,!1}),i});e.getRequesterIds=(t=>{let a=[];return EACH(e.getDataSet(t),t=>{a.push(t.accountId)}),a}),e.deny=(t=>{let a=t.target,n=t.accountId,i=t.hash,o=DSide.GuildStore.getGuild(a);void 0!==o&&DSide.Verify({accountId:o.accountId,data:{target:a,accountId:n},hash:i})===!0&&EACH(e.getDataSet(a),(t,i)=>{if(t.accountId===n)return e.dropData({target:a,hash:i}),!1})}),e.acceptedRequest=(t=>{let a=t.guildId,n=t.accountId;EACH(e.getDataSet(a),(t,i)=>{if(t.accountId===n)return e.dropData({target:a,hash:i}),!1})})}}),DSide.dStore=OBJECT({preset:()=>{return DSide.Store},params:()=>{return{storeName:"d",dataStructure:{d:{notEmpty:!0,integer:!0}}}},init:(t,e)=>{const a=require("ethereumjs-util"),n=20;let i=(e.getBalance=(t=>{t=a.toChecksumAddress(t);let i=e.getData(t);return void 0!==i?i.d:n}),e.transfer=(t=>{let e=t.accountId,n=t.targetAccountId,r=t.amount,d=t.hash;return e=a.toChecksumAddress(e),n=a.toChecksumAddress(n),DSide.Verify({accountId:e,data:{targetAccountId:n,amount:r},hash:d})===!0&&i({accountId:e,amount:r})===!0&&(o({accountId:n,amount:r}),!0)}),e.use=(t=>{let i=t.accountId,o=t.amount;i=a.toChecksumAddress(i);let r=e.getData(i);return void 0===r&&(r=e.saveData({id:i,data:{d:n,createTime:new Date}}).savedData),r.d-o>=0&&(r.d-=o,r.lastUpdateTime=new Date,e.updateData({id:i,data:r}),!0)})),o=e.charge=(t=>{let i=t.accountId,o=t.amount;i=a.toChecksumAddress(i);let r=e.getData(i);void 0===r&&(r=e.saveData({id:i,data:{d:n,createTime:new Date}}).savedData),r.d+=o,r.lastUpdateTime=new Date,e.updateData({id:i,data:r})});e.chargeLacks=(()=>{EACH(e.getDataSet(),(t,a)=>{t.d<20&&e.dropData(a)})}),e.chargeNodeReward=(t=>{let e=t.accountId,n=t.operationTime;e=a.toChecksumAddress(e),o({accountId:e,amount:INTEGER(n/1e3/60/60*20)})})}}),DSide.EthereumNetworkProviderStore=OBJECT({init:(t,e)=>{const a={Mainnet:"wss://mainnet.infura.io/ws/v3/c1a2b959458440c780e5614fd075051b",Ropsten:"wss://ropsten.infura.io/ws/v3/c1a2b959458440c780e5614fd075051b",Rinkeby:"wss://rinkeby.infura.io/ws/v3/c1a2b959458440c780e5614fd075051b",Kovan:"wss://kovan.infura.io/ws/v3/c1a2b959458440c780e5614fd075051b",Goerli:"wss://goerli.infura.io/ws/v3/c1a2b959458440c780e5614fd075051b"};let n=require("web3"),i={};EACH(a,(t,e)=>{let a=()=>{let o=new n.providers.WebsocketProvider(t);return o.on("end",t=>{i[e].setProvider(a())}),o};i[e]=new n(a())});e.getWeb3=(t=>{return i[t]})}}),DSide.NodeOperationTimeStore=OBJECT({preset:()=>{return DSide.Store},params:()=>{return{storeName:"NodeOperationTime",dataStructure:{startOperationTime:{date:!0},operationTime:{integer:!0}}}},init:(t,e)=>{e.getOperationTime=(t=>{let a=e.getData(t);if(void 0!==a)return void 0!==a.startOperationTime?Date.now()-a.startOperationTime.getTime():a.operationTime}),e.clearOperationTimes=(()=>{EACH(e.getDataSet(),(t,a)=>{void 0===t.startOperationTime?e.dropData(a):(t.startOperationTime=new Date,e.updateData({id:a,data:t}))})})}}),DSide.ChatStore=OBJECT({preset:()=>{return DSide.TargetStore},params:()=>{return{storeName:"Chat",dataStructure:{senderId:{notEmpty:!0,size:42},message:{notEmpty:!0,size:{max:256}}}}},init:(t,e)=>{let a;OVERRIDE(e.saveData,t=>{a=e.saveData=(a=>{if(t(a),COUNT_PROPERTIES(e.getDataSet())>100){let t,a;EACH(e.getDataSet(),(e,n)=>{(void 0===a||a>e.createTime)&&(t=n,a=e.createTime)}),void 0!==t&&dropData(t)}})})}}),DSide.PendingTransactionStore=OBJECT({preset:()=>{return DSide.TargetStore},params:()=>{return{storeName:"PendingTransaction",dataStructure:{network:{notEmpty:!0,size:{max:256}},transactionHash:{notEmpty:!0,size:66},message:{size:{max:256}}}}},init:(t,e)=>{let a=(t,a)=>{let n=RAR(()=>{void 0===DSide.EthereumNetworkProviderStore.getWeb3(a.network)?(SHOW_ERROR("DSide.PendingTransactionStore","Web3이 초기화되지 않았습니다.",{id:t,data:a}),e.dropData({target:a.target,id:t})):DSide.EthereumNetworkProviderStore.getWeb3(a.network).eth.getTransactionReceipt(a.transactionHash,(i,o)=>{i!==TO_DELETE?(SHOW_ERROR("DSide.PendingTransactionStore","트랜잭션 오류가 발생했습니다.",{id:t,data:a}),e.dropData({target:a.target,id:t})):o===TO_DELETE||o.blockHash===TO_DELETE?n():e.dropData({target:a.target,id:t})})})};EACH(e.getTargetHashSet(),(t,n)=>{EACH(e.getDataSet(n),(t,e)=>{a(e,t)})});let n;OVERRIDE(e.saveData,t=>{n=e.saveData=(e=>{t(e),a(e.id,e.data)})});let i;OVERRIDE(e.syncData,t=>{i=e.syncData=(e=>{t(e),a(e.id,e.data)})})}});